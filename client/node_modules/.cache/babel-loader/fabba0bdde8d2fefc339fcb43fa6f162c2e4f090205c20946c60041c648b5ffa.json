{"ast":null,"code":"var _jsxFileName = \"/Users/yoonsunghwang/My Projects/moffitt/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ProfilePage from './components/ProfilePage';\nimport SwipePage from './components/SwipePage';\nimport MatchedProfiles from './components/MatchedProfiles';\nimport ErrorPage from './components/ErrorPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = {\n  swipe: /*#__PURE__*/_jsxDEV(SwipePage, {\n    cardData: 'dummy'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this),\n  profile: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this),\n  matched: /*#__PURE__*/_jsxDEV(MatchedProfiles, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n};\nfunction App() {\n  _s();\n  const width = window.innerWidth > 992 ? 428 : '100%';\n  const [isLoading, setLoading] = useState(true);\n  const [page, setPage] = useState('swipe');\n  useEffect(() => {\n    if (!isLoading) {\n      const loadingPage = document.getElementById('loading');\n      if (loadingPage) loadingPage.style.display = 'none';\n    }\n  }, [isLoading]);\n\n  /* connect to database, if profile exists retrieve it, otherwise render CreateProfile */\n  useEffect(() => {\n    const request = window.indexedDB.open('UserProfileDB');\n    request.onerror = event => {\n      return /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    };\n    request.onsuccess = event => {};\n  }, []);\n  // return (\n  //   <div  style={{display: 'flex', justifyContent: 'center'}}>\n  //     <OuterContainer setLoading={setLoading} width={width}>\n  //       {pages[page]}\n  //       <NavBar setPage={setPage} width={width} />\n  //     </OuterContainer>\n  //   </div>\n  // )\n}\n_s(App, \"RMobJC86S5VPN29+ZOaYQYvKHbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ProfilePage","SwipePage","MatchedProfiles","ErrorPage","jsxDEV","_jsxDEV","pages","swipe","cardData","fileName","_jsxFileName","lineNumber","columnNumber","profile","matched","App","_s","width","window","innerWidth","isLoading","setLoading","page","setPage","loadingPage","document","getElementById","style","display","request","indexedDB","open","onerror","event","onsuccess","_c","$RefreshReg$"],"sources":["/Users/yoonsunghwang/My Projects/moffitt/client/src/App.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, ReactComponentElement, ReactNode, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport { Box, Container } from '@mui/material';\n\nimport OuterContainer from './components/OuterContainer';\nimport { WidthWideOutlined } from '@mui/icons-material';\n\nimport ProfilePage from './components/ProfilePage';\nimport SwipePage from './components/SwipePage';\nimport MatchedProfiles from './components/MatchedProfiles';\nimport ErrorPage from './components/ErrorPage';\n\ntype PageType = 'swipe' | 'profile' | 'matched';\n\nconst pages: Record<string, JSX.Element> = {\n  swipe: (\n    <SwipePage cardData={'dummy'}/>\n  ),\n  profile: (\n    <ProfilePage />\n  ),\n  matched: (\n    <MatchedProfiles />\n  )\n};\n\nfunction App() {\n  const width = window.innerWidth > 992 ? 428 : '100%';\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [page, setPage] = useState<PageType>('swipe');\n  useEffect(() => {\n    if (!isLoading) {\n      const loadingPage = document.getElementById('loading');\n      if (loadingPage)\n        loadingPage.style.display = 'none';\n    }\n  }, [isLoading])\n\n  /* connect to database, if profile exists retrieve it, otherwise render CreateProfile */\n  useEffect(() => {\n    const request = window.indexedDB.open('UserProfileDB');\n    request.onerror = (event: Event) => {\n      return (\n        <ErrorPage />\n      )\n    }\n    request.onsuccess = (event: Event) => {\n\n    }\n\n  }, [])\n  // return (\n  //   <div  style={{display: 'flex', justifyContent: 'center'}}>\n  //     <OuterContainer setLoading={setLoading} width={width}>\n  //       {pages[page]}\n  //       <NavBar setPage={setPage} width={width} />\n  //     </OuterContainer>\n  //   </div>\n  // )\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAYC,SAAS,EAAEC,QAAQ,QAA2D,OAAO;AAE7G,OAAO,WAAW;AAOlB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/C,MAAMC,KAAkC,GAAG;EACzCC,KAAK,eACHF,OAAA,CAACJ,SAAS;IAACO,QAAQ,EAAE;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9B;EACDC,OAAO,eACLR,OAAA,CAACL,WAAW;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;EACDE,OAAO,eACLT,OAAA,CAACH,eAAe;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAEpB,CAAC;AAED,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,KAAK,GAAGC,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM;EACpD,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAU,IAAI,CAAC;EACvD,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAW,OAAO,CAAC;EACnDD,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,SAAS,EAAE;MACd,MAAMI,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;MACtD,IAAIF,WAAW,EACbA,WAAW,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;IACtC;EACF,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;;EAEf;EACAtB,SAAS,CAAC,MAAM;IACd,MAAM+B,OAAO,GAAGX,MAAM,CAACY,SAAS,CAACC,IAAI,CAAC,eAAe,CAAC;IACtDF,OAAO,CAACG,OAAO,GAAIC,KAAY,IAAK;MAClC,oBACE5B,OAAA,CAACF,SAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAEjB,CAAC;IACDiB,OAAO,CAACK,SAAS,GAAID,KAAY,IAAK,CAEtC,CAAC;EAEH,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACjB,EAAA,CAjCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}