{"ast":null,"code":"var _jsxFileName = \"/Users/yoonsunghwang/My Projects/moffitt/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport OuterContainer from './components/OuterContainer';\nimport ProfilePage from './components/ProfilePage';\nimport SwipePage from './components/SwipePage';\nimport MatchedProfiles from './components/MatchedProfiles';\nimport CreateProfile from './components/CreateProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = {\n  swipe: /*#__PURE__*/_jsxDEV(SwipePage, {\n    cardData: 'dummy'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this),\n  profile: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this),\n  matched: /*#__PURE__*/_jsxDEV(MatchedProfiles, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n};\nconst dummyProfile = {\n  firstName: \"Wonyoung\",\n  lastName: \"Jang\",\n  gender: 'female',\n  photos: ['../../public/13131.jpeg'],\n  location: 4\n};\nfunction App() {\n  _s();\n  const width = window.innerWidth > 992 ? 428 : '100%';\n  const [isLoading, setLoading] = useState(true);\n  const dbName = 'userProfileDB';\n  const objectStoreName = 'profiles';\n  const dbVersion = 1;\n  const [hasProfile, setHasProfile] = useState(true);\n  const [userProfile, setUserProfile] = useState({\n    firstName: '',\n    lastName: '',\n    gender: '',\n    photos: [],\n    location: 0\n  });\n  const [objectStore, setObjectStore] = useState();\n  const [page, setPage] = useState('swipe');\n  useEffect(() => {\n    if (!isLoading) {\n      const loadingPage = document.getElementById('loading');\n      if (loadingPage) loadingPage.style.display = 'none';\n    }\n  }, [isLoading]);\n\n  /* connect to database, if profile exists retrieve it, otherwise render CreateProfile */\n  useEffect(() => {\n    const request = window.indexedDB.open(dbName, dbVersion);\n    console.log(request);\n    /* DB not supported or error occurred */\n    request.onerror = event => {\n      if (event) console.error(`Database error: ${event.target.error}`);\n    };\n    /* DB doesn't exist, create DB and request.onsuccess event fires. */\n    request.onupgradeneeded = event => {\n      console.log('onupgradeneeded event fired!');\n      const db = event.target.result;\n      const objectStore = db === null || db === void 0 ? void 0 : db.createObjectStore(objectStoreName, {\n        keyPath: 'id'\n      });\n      objectStore.transaction.oncomplete = event => {\n        const profileObjectStore = db.transaction(objectStoreName, \"readwrite\").objectStore(objectStoreName);\n        profileObjectStore.add(dummyProfile);\n      };\n      setHasProfile(false);\n    };\n    /* DB exists */\n    request.onsuccess = event => {\n      console.log('onsuccess event fired!');\n      const db = event.target.result;\n      const transaction = db === null || db === void 0 ? void 0 : db.transaction(objectStoreName, \"readwrite\");\n      const objectStore = transaction === null || transaction === void 0 ? void 0 : transaction.objectStore(objectStoreName);\n      if (objectStore) setObjectStore(objectStore);\n      if (hasProfile) {\n        const getAllRequest = objectStore.getAll();\n        getAllRequest.onsuccess = () => {\n          const allData = getAllRequest.result;\n          if (allData.length > 1) {\n            console.error('multiple user profiles...');\n          } else {\n            setUserProfile(allData[0]);\n          }\n        };\n        getAllRequest.onerror = () => {\n          console.error(\"Error retrieving data:\", getAllRequest.error);\n        };\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(OuterContainer, {\n      setLoading: setLoading,\n      width: width,\n      children: [hasProfile ? /*#__PURE__*/_jsxDEV(CreateProfile, {\n        setUserProfile: setUserProfile,\n        objectStore: objectStore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this) : pages[page], /*#__PURE__*/_jsxDEV(NavBar, {\n        setPage: setPage,\n        width: width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"66j+92v4MKSibmgo5gIr0yRjRVc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","OuterContainer","ProfilePage","SwipePage","MatchedProfiles","CreateProfile","jsxDEV","_jsxDEV","pages","swipe","cardData","fileName","_jsxFileName","lineNumber","columnNumber","profile","matched","dummyProfile","firstName","lastName","gender","photos","location","App","_s","width","window","innerWidth","isLoading","setLoading","dbName","objectStoreName","dbVersion","hasProfile","setHasProfile","userProfile","setUserProfile","objectStore","setObjectStore","page","setPage","loadingPage","document","getElementById","style","display","request","indexedDB","open","console","log","onerror","event","error","target","onupgradeneeded","db","result","createObjectStore","keyPath","transaction","oncomplete","profileObjectStore","add","onsuccess","getAllRequest","getAll","allData","length","justifyContent","children","_c","$RefreshReg$"],"sources":["/Users/yoonsunghwang/My Projects/moffitt/client/src/App.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, ReactComponentElement, ReactNode, useLayoutEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport { Box, Container } from '@mui/material';\n\nimport OuterContainer from './components/OuterContainer';\nimport { WidthWideOutlined } from '@mui/icons-material';\n\nimport ProfilePage from './components/ProfilePage';\nimport SwipePage from './components/SwipePage';\nimport MatchedProfiles from './components/MatchedProfiles';\nimport ErrorPage from './components/ErrorPage';\nimport CreateProfile from './components/CreateProfile';\n\ntype PageType = 'swipe' | 'profile' | 'matched';\ninterface UserProfile {\n  firstName: string;\n  lastName: string;\n  gender: 'male' | 'female' | 'non-binary' | '';\n  photos: string[];\n  location: 3 | 4 | 5 | 0;\n}\n\ninterface UserData {\n  userProfile: UserProfile;\n  setUserProfile: Function;\n}\n\nconst pages: Record<string, JSX.Element> = {\n  swipe: (\n    <SwipePage cardData={'dummy'}/>\n  ),\n  profile: (\n    <ProfilePage />\n  ),\n  matched: (\n    <MatchedProfiles />\n  )\n};\n\nconst dummyProfile: UserProfile = {\n  firstName: \"Wonyoung\",\n  lastName: \"Jang\",\n  gender: 'female',\n  photos: ['../../public/13131.jpeg'],\n  location: 4,\n}\n\nfunction App() {\n  const width = window.innerWidth > 992 ? 428 : '100%';\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const dbName = 'userProfileDB';\n  const objectStoreName = 'profiles';\n  const dbVersion = 1;\n  const [hasProfile, setHasProfile] = useState<boolean>(true);\n  const [userProfile, setUserProfile] = useState<UserProfile>({\n    firstName: '',\n    lastName: '',\n    gender: '',\n    photos: [],\n    location: 0,\n  });\n  const [objectStore, setObjectStore] = useState<IDBObjectStore>();\n  const [page, setPage] = useState<PageType>('swipe');\n  useEffect(() => {\n    if (!isLoading) {\n      const loadingPage = document.getElementById('loading');\n      if (loadingPage)\n        loadingPage.style.display = 'none';\n    }\n  }, [isLoading])\n\n  /* connect to database, if profile exists retrieve it, otherwise render CreateProfile */\n  useEffect(() => {\n    const request = window.indexedDB.open(dbName, dbVersion);\n    console.log(request);\n    /* DB not supported or error occurred */\n    request.onerror = (event: Event) => {\n      if (event)\n        console.error(`Database error: ${(event.target as IDBRequest).error}`);\n    }\n    /* DB doesn't exist, create DB and request.onsuccess event fires. */\n    request.onupgradeneeded = (event: Event) => {\n      console.log('onupgradeneeded event fired!');\n      const db = (event.target as IDBOpenDBRequest).result;\n      const objectStore = db?.createObjectStore(objectStoreName, {keyPath: 'id'});\n      objectStore.transaction.oncomplete = (event: Event) => {\n        const profileObjectStore = db\n        .transaction(objectStoreName, \"readwrite\")\n        .objectStore(objectStoreName);\n        profileObjectStore.add(dummyProfile);\n      }\n      setHasProfile(false);\n    }\n    /* DB exists */\n    request.onsuccess = (event: Event) => {\n      console.log('onsuccess event fired!');\n\n      const db = (event.target as IDBOpenDBRequest).result;\n      const transaction = db?.transaction(objectStoreName, \"readwrite\");\n      const objectStore = transaction?.objectStore(objectStoreName);\n      if (objectStore)\n        setObjectStore(objectStore);\n      if (hasProfile) {\n        const getAllRequest = objectStore.getAll();\n\n        getAllRequest.onsuccess = () => {\n          const allData = getAllRequest.result;\n          if (allData.length > 1) {\n            console.error('multiple user profiles...');\n          } else {\n            setUserProfile(allData[0]);\n          }\n        };\n      \n        getAllRequest.onerror = () => {\n          console.error(\"Error retrieving data:\", getAllRequest.error);\n        };\n      }\n    }\n\n  }, [])\n\n\n  return (\n    <div  style={{display: 'flex', justifyContent: 'center'}}>\n      <OuterContainer setLoading={setLoading} width={width}>\n        { hasProfile ? \n        <CreateProfile setUserProfile={setUserProfile} objectStore={objectStore} /> :\n        pages[page] }\n        <NavBar setPage={setPage} width={width} />\n      </OuterContainer>\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}